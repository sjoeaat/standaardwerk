:5173/vite.svg:1  Failed to load resource: the server responded with a status of 404 (Not Found)
 🔍 Detected condition on line 65: "Stopp Horde nach unten bei Umschwimmen = SETZEN" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 65: "Stopp Horde nach unten bei Umschwimmen = SETZEN" (OR: false, NOT: false)
 📝 Found variable assignment: "Stopp Horde nach unten bei Umschwimmen = SETZEN"
 🔍 Trying to parse step on line 67: "SCHRITT 5: +19"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 5: +19" (length: 14)
 🎯 Character codes: Array(14)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 5 - +19
 📝 Created step: Object
 🔍 Trying to parse step on line 68: "SCHRITT 8: Hebevorrichtung Horde N31 hinunten (N31-100-L)"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 8: Hebevorrichtung Horde N31 hinunten (N31-100-L)" (length: 57)
 🎯 Character codes: Array(57)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 8 - Hebevorrichtung Horde N31 hinunten (N31-100-L)
 📝 Created step: Object
 🔍 Detected condition on line 73: "Variable 1 (Erwünschte Position Horde N31) = = = Horden Ausfuhrtabelle. Reihe[1].Von Etage" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 73: "Variable 1 (Erwünschte Position Horde N31) = = = Horden Ausfuhrtabelle. Reihe[1].Von Etage" (OR: false, NOT: false)
 📝 Found variable assignment: "Variable 1 (Erwünschte Position Horde N31) = = = Horden Ausfuhrtabelle. Reihe[1].Von Etage"
 🔍 Trying to parse step on line 75: "SCHRITT 2: &amp;3) = 2T30: Entleeren Horde Reihe für Reihe: Erwünschte Etage"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 2: &amp;3) = 2T30: Entleeren Horde Reihe für Reihe: Erwünschte Etage" (length: 76)
 🎯 Character codes: Array(76)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 2 - &amp;3) = 2T30: Entleeren Horde Reihe für Reihe: Erwünschte Etage
 📝 Created step: Object
 🔍 Trying to parse step on line 77: "SCHRITT 7: +8)"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 7: +8)" (length: 14)
 🎯 Character codes: Array(14)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 7 - +8)
 📝 Created step: Object
 🔍 Detected condition on line 78: "Positionieren Horde (2T30: Entleeren Horde Reihe für Reihe" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 78: "Positionieren Horde (2T30: Entleeren Horde Reihe für Reihe" (OR: false, NOT: false)
 🔍 Trying to parse step on line 79: "SCHRITT 1: &amp;2)"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 1: &amp;2)" (length: 18)
 🎯 Character codes: Array(18)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 1 - &amp;2)
 📝 Created step: Object
 🔍 Detected condition on line 80: "N21: Umschwimmen Horde nach N31: Erwünschte Etage" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 80: "N21: Umschwimmen Horde nach N31: Erwünschte Etage" (OR: false, NOT: false)
 🔍 Detected condition on line 81: "Bestimmen Etage Umschwimmen (N21: Umschwimmen Horde nach N31" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 81: "Bestimmen Etage Umschwimmen (N21: Umschwimmen Horde nach N31" (OR: false, NOT: false)
 🔍 Trying to parse step on line 82: "SCHRITT 2: &amp;3) = 21 (Unterste Position)"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 2: &amp;3) = 21 (Unterste Position)" (length: 43)
 🎯 Character codes: Array(43)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 2 - &amp;3) = 21 (Unterste Position)
 📝 Created step: Object
 🔍 Trying to parse step on line 84: "SCHRITT 12: )"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 12: )" (length: 13)
 🎯 Character codes: Array(13)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 12 - )
 📝 Created step: Object
 🔍 Detected condition on line 85: "+ Horde nach unterste Position (Umschwimmen Horde N21 nach N31" (markers: true, indented: false, implicit: false)
 🔍 Parsing condition on line 85: "Horde nach unterste Position (Umschwimmen Horde N21 nach N31" (OR: true, NOT: false)
 🔍 Trying to parse step on line 86: "SCHRITT 18: )"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 18: )" (length: 13)
 🎯 Character codes: Array(13)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 18 - )
 📝 Created step: Object
 🔍 Detected condition on line 87: "Variable 2 (Sollwert Position [1..21]) = = = Erwünschte Position Horde N31" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 87: "Variable 2 (Sollwert Position [1..21]) = = = Erwünschte Position Horde N31" (OR: false, NOT: false)
 📝 Found variable assignment: "Variable 2 (Sollwert Position [1..21]) = = = Erwünschte Position Horde N31"
 🔍 Trying to parse step on line 88: "Start Positionieren (RUHE&amp;SCHRITT 1)"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "Start Positionieren (RUHE&amp;SCHRITT 1)" (length: 40)
 🎯 Character codes: Array(40)
 🎯 Step match result: null
 🔍 Detected condition on line 88: "Start Positionieren (RUHE&amp;SCHRITT 1)" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 88: "Start Positionieren (RUHE&amp;SCHRITT 1)" (OR: false, NOT: false)
 🔍 Detected condition on line 89: "Störung: Gefüllte Etage Horde N31 ganz oben Salzlake = SETZEN" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 89: "Störung: Gefüllte Etage Horde N31 ganz oben Salzlake = SETZEN" (OR: false, NOT: false)
 📝 Found variable assignment: "Störung: Gefüllte Etage Horde N31 ganz oben Salzlake = SETZEN"
 🔍 Detected condition on line 93: "NICHT SETZEN-Bedingung" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 93: "SETZEN-Bedingung" (OR: false, NOT: true)
 📊 Parse result for Horde N31 Heben/Senken: Object
 🔧 Starting normalization for source: word
 📝 Original text (first 300 chars): Symbolik IDB: N31_HebenSenken
RUHE: Horde N31 Heben/Senken
Start Horde aufstellen für Entleeren (Entleeren Horde N31 SCHRITT 3)
+
Horde nach oben während Produktion (Entleeren Horde N31: Entleeren Horde gestartet)
Start Positionieren Horde (T40: Entleeren Horde Reihe für Reihe SCHRITT 5)
+
Start Hor
 ✅ Normalized text (first 300 chars): Symbolik IDB: N31_HebenSenken
RUHE: Horde N31 Heben/Senken
Start Horde aufstellen für Entleeren (Entleeren Horde N31
SCHRITT 3: )
+ Horde nach oben während Produktion (Entleeren Horde N31: Entleeren Horde gestartet)
Start Positionieren Horde (T40: Entleeren Horde Reihe für Reihe
SCHRITT 5: )
+ Start
 ✅ Stappen gevonden voor Horde N31 Heben/Senken:
   - RUST 0: Horde N31 Heben/Senken
   - SCHRITT 3: )
   - SCHRITT 5: )
   - SCHRITT 12: )
   - SCHRITT 4: )
   - SCHRITT 18: )
   - SCHRITT 1: Freigabe?
   - SCHRITT 2: Bewegen oder auf Position?
   - SCHRITT 3: Signalisierung Horde geht bewegen
   - SCHRITT 4: Horde heben
   - SCHRITT 5: Stopp/Kontrolle Position
   - SCHRITT 6: Fertig
   - SCHRITT 2: NICHT Auf Sollwert Position
   - SCHRITT 7: Signalisierung Horde geht bewegen
   - SCHRITT 8: Horde senken
   - SCHRITT 9: Stopp/Kontrolle Position
   - SCHRITT 2: Auf Sollwert Position
   - SCHRITT 10: Fertig
   - SCHRITT 4: Horde während Aufstellen oder Warten aus Ausfuhrtabelle entfernt: Sollwert Position N31 = 21 (unterste Position)
   - SCHRITT 11: Stopp/Kontrolle Position
   - SCHRITT 12: Fertig
   - SCHRITT 5: +19
   - SCHRITT 8: Hebevorrichtung Horde N31 hinunten (N31-100-L)
   - SCHRITT 2: &amp;3) = 2T30: Entleeren Horde Reihe für Reihe: Erwünschte Etage
   - SCHRITT 7: +8)
   - SCHRITT 1: &amp;2)
   - SCHRITT 2: &amp;3) = 21 (Unterste Position)
   - SCHRITT 12: )
   - SCHRITT 18: )
 📌 Found program: Horde N32 Heben/Senken FB452
 📁 Created program with path: [AusfuhrHorden N31-N34 → Maschineteile → Horde N31 Heben/Senken] for "Horde N32 Heben/Senken"
 🗂️ Updated path level 2: "Horde N32 Heben/Senken" → [AusfuhrHorden N31-N34 → Maschineteile → Horde N32 Heben/Senken]
   ↳ IDB naam: N32_HebenSenken
 💾 Saving program: Horde N32 Heben/Senken
 🔧 Starting normalization for source: word
 📝 Original text (first 300 chars): Symbolik IDB: N32_HebenSenken
Siehe: Horde N31 Heben/Senken
 ✅ Normalized text (first 300 chars): Symbolik IDB: N32_HebenSenken
Siehe: Horde N31 Heben/Senken
 📊 Parse result for Horde N32 Heben/Senken: Object
 🔧 Starting normalization for source: word
 📝 Original text (first 300 chars): Symbolik IDB: N32_HebenSenken
Siehe: Horde N31 Heben/Senken
 ✅ Normalized text (first 300 chars): Symbolik IDB: N32_HebenSenken
Siehe: Horde N31 Heben/Senken
 ⚠️ Geen stappen gevonden voor Horde N32 Heben/Senken
overrideMethod @ installHook.js:1
 📌 Found program: Horde N33 Heben/Senken FB454
 📁 Created program with path: [AusfuhrHorden N31-N34 → Maschineteile → Horde N32 Heben/Senken] for "Horde N33 Heben/Senken"
 🗂️ Updated path level 2: "Horde N33 Heben/Senken" → [AusfuhrHorden N31-N34 → Maschineteile → Horde N33 Heben/Senken]
   ↳ IDB naam: N33_HebenSenken
 💾 Saving program: Horde N33 Heben/Senken
 🔧 Starting normalization for source: word
 📝 Original text (first 300 chars): Symbolik IDB: N33_HebenSenken
Siehe: Horde N31 Heben/Senken
 ✅ Normalized text (first 300 chars): Symbolik IDB: N33_HebenSenken
Siehe: Horde N31 Heben/Senken
 📊 Parse result for Horde N33 Heben/Senken: Object
 🔧 Starting normalization for source: word
 📝 Original text (first 300 chars): Symbolik IDB: N33_HebenSenken
Siehe: Horde N31 Heben/Senken
 ✅ Normalized text (first 300 chars): Symbolik IDB: N33_HebenSenken
Siehe: Horde N31 Heben/Senken
 ⚠️ Geen stappen gevonden voor Horde N33 Heben/Senken
overrideMethod @ installHook.js:1
 📌 Found program: Horde N34 Heben/Senken FB456
 📁 Created program with path: [AusfuhrHorden N31-N34 → Maschineteile → Horde N33 Heben/Senken] for "Horde N34 Heben/Senken"
 🗂️ Updated path level 2: "Horde N34 Heben/Senken" → [AusfuhrHorden N31-N34 → Maschineteile → Horde N34 Heben/Senken]
   ↳ IDB naam: N34_HebenSenken
 🗂️ Updated path level 1: "Strömung" → [AusfuhrHorden N31-N34 → Strömung → Horde N34 Heben/Senken]
 💾 Saving program: Horde N34 Heben/Senken
 🔧 Starting normalization for source: word
 📝 Original text (first 300 chars): Symbolik IDB: N34_HebenSenken
Siehe: Horde N31 Heben/Senken
 ✅ Normalized text (first 300 chars): Symbolik IDB: N34_HebenSenken
Siehe: Horde N31 Heben/Senken
 📊 Parse result for Horde N34 Heben/Senken: Object
 🔧 Starting normalization for source: word
 📝 Original text (first 300 chars): Symbolik IDB: N34_HebenSenken
Siehe: Horde N31 Heben/Senken
 ✅ Normalized text (first 300 chars): Symbolik IDB: N34_HebenSenken
Siehe: Horde N31 Heben/Senken
 ⚠️ Geen stappen gevonden voor Horde N34 Heben/Senken
overrideMethod @ installHook.js:1
 📌 Found program: Strömungsjets 2N11-2N14-101 FB490
 📁 Created program with path: [AusfuhrHorden N31-N34 → Strömung] for "Strömungsjets 2N11-2N14-101"
 🗂️ Updated path level 2: "Strömungsjets 2N11-2N14-101" → [AusfuhrHorden N31-N34 → Strömung → Strömungsjets 2N11-2N14-101]
   ↳ IDB naam: Strömungsjets Ausfuhr
 💾 Saving program: Strömungsjets 2N11-2N14-101
 🔧 Starting normalization for source: word
 📝 Original text (first 300 chars): Symbolik IDB: Strömungsjets Ausfuhr
Strömungsjet für Horde N31 öffnen (N31-300) =
Horde N31 wird entleert (Entleeren Horde N31 SCHRITT 5-8)
Tür und Strömungsjet zwischen Horden 2N11/N31 unten (2N11-101)
Strömungsjet für Horde N32 öffnen (N32-300) =
Horde 2N32 wird entleert (Entleeren Horde 2N32 SCHR
 ✅ Normalized text (first 300 chars): Symbolik IDB: Strömungsjets Ausfuhr
Strömungsjet für Horde N31 öffnen (N31-300) = Horde N31 wird entleert (Entleeren Horde N31
SCHRITT 5: -8)
Tür und Strömungsjet zwischen Horden 2N11/N31 unten (2N11-101)
Strömungsjet für Horde N32 öffnen (N32-300) = Horde 2N32 wird entleert (Entleeren Horde 2N32
SC
 🔍 Trying to parse step on line 3: "SCHRITT 5: -8)"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 5: -8)" (length: 14)
 🎯 Character codes: Array(14)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 5 - -8)
 📝 Created step: Object
 🔍 Detected condition on line 5: "Strömungsjet für Horde N32 öffnen (N32-300) = Horde 2N32 wird entleert (Entleeren Horde 2N32" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 5: "Strömungsjet für Horde N32 öffnen (N32-300) = Horde 2N32 wird entleert (Entleeren Horde 2N32" (OR: false, NOT: false)
 📝 Found variable assignment: "Strömungsjet für Horde N32 öffnen (N32-300) = Horde 2N32 wird entleert (Entleeren Horde 2N32"
 🔍 Trying to parse step on line 6: "SCHRITT 5: -8)"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 5: -8)" (length: 14)
 🎯 Character codes: Array(14)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 5 - -8)
 📝 Created step: Object
 🔍 Detected condition on line 8: "Strömungsjet für Horde N33 öffnen (N33-300) = Horde 2N33 wird entleert (Entleeren Horde 2N33" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 8: "Strömungsjet für Horde N33 öffnen (N33-300) = Horde 2N33 wird entleert (Entleeren Horde 2N33" (OR: false, NOT: false)
 📝 Found variable assignment: "Strömungsjet für Horde N33 öffnen (N33-300) = Horde 2N33 wird entleert (Entleeren Horde 2N33"
 🔍 Trying to parse step on line 9: "SCHRITT 5: -8)"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 5: -8)" (length: 14)
 🎯 Character codes: Array(14)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 5 - -8)
 📝 Created step: Object
 🔍 Detected condition on line 11: "Strömungsjet für Horde N34 öffnen (N34-300) = Horde 2N34 wird entleert (Entleeren Horde 2N34" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 11: "Strömungsjet für Horde N34 öffnen (N34-300) = Horde 2N34 wird entleert (Entleeren Horde 2N34" (OR: false, NOT: false)
 📝 Found variable assignment: "Strömungsjet für Horde N34 öffnen (N34-300) = Horde 2N34 wird entleert (Entleeren Horde 2N34"
 🔍 Trying to parse step on line 12: "SCHRITT 5: -8)"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 5: -8)" (length: 14)
 🎯 Character codes: Array(14)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 5 - -8)
 📝 Created step: Object
 📊 Parse result for Strömungsjets 2N11-2N14-101: Object
 🔧 Starting normalization for source: word
 📝 Original text (first 300 chars): Symbolik IDB: Strömungsjets Ausfuhr
Strömungsjet für Horde N31 öffnen (N31-300) =
Horde N31 wird entleert (Entleeren Horde N31 SCHRITT 5-8)
Tür und Strömungsjet zwischen Horden 2N11/N31 unten (2N11-101)
Strömungsjet für Horde N32 öffnen (N32-300) =
Horde 2N32 wird entleert (Entleeren Horde 2N32 SCHR
 ✅ Normalized text (first 300 chars): Symbolik IDB: Strömungsjets Ausfuhr
Strömungsjet für Horde N31 öffnen (N31-300) = Horde N31 wird entleert (Entleeren Horde N31
SCHRITT 5: -8)
Tür und Strömungsjet zwischen Horden 2N11/N31 unten (2N11-101)
Strömungsjet für Horde N32 öffnen (N32-300) = Horde 2N32 wird entleert (Entleeren Horde 2N32
SC
 ✅ Stappen gevonden voor Strömungsjets 2N11-2N14-101:
   - SCHRITT 5: -8)
   - SCHRITT 5: -8)
   - SCHRITT 5: -8)
   - SCHRITT 5: -8)
 📌 Found program: Strömungspumpe P04 FB492
 📁 Created program with path: [AusfuhrHorden N31-N34 → Strömung → Strömungsjets 2N11-2N14-101] for "Strömungspumpe P04"
 🗂️ Updated path level 2: "Strömungspumpe P04" → [AusfuhrHorden N31-N34 → Strömung → Strömungspumpe P04]
   ↳ IDB naam: Strömungspumpe P04
 🗂️ Updated path level 0: "Salzbad N20" → [Salzbad N20 → Strömung → Strömungspumpe P04]
 💾 Saving program: Strömungspumpe P04
 🔧 Starting normalization for source: word
 📝 Original text (first 300 chars): Symbolik IDB: Strömungspumpe P04
Start Pumpe Strömungsjets Ausfuhr P04 =
NICHT P04 HAND
[Horde N31 wird entleert (Entleeren Horde N31 SCHRITT 5-8)
N31 auf Position
+
Horde N32 wird entleert (Entleeren Horde N32 SCHRITT 5-8)
N32 auf Position
+
Horde N33 wird entleert (Entleeren Horde N33 SCHRITT 5-8)
 ✅ Normalized text (first 300 chars): Symbolik IDB: Strömungspumpe P04
Start Pumpe Strömungsjets Ausfuhr P04 = NICHT P04 HAND
[Horde N31 wird entleert (Entleeren Horde N31
SCHRITT 5: -8)
N31 auf Position
+ Horde N32 wird entleert (Entleeren Horde N32
SCHRITT 5: -8)
N32 auf Position
+ Horde N33 wird entleert (Entleeren Horde N33
SCHRITT 
 🔍 Trying to parse step on line 4: "SCHRITT 5: -8)"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 5: -8)" (length: 14)
 🎯 Character codes: Array(14)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 5 - -8)
 📝 Created step: Object
 🔍 Detected condition on line 6: "+ Horde N32 wird entleert (Entleeren Horde N32" (markers: true, indented: false, implicit: false)
 🔍 Parsing condition on line 6: "Horde N32 wird entleert (Entleeren Horde N32" (OR: true, NOT: false)
 🔍 Trying to parse step on line 7: "SCHRITT 5: -8)"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 5: -8)" (length: 14)
 🎯 Character codes: Array(14)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 5 - -8)
 📝 Created step: Object
 🔍 Detected condition on line 9: "+ Horde N33 wird entleert (Entleeren Horde N33" (markers: true, indented: false, implicit: false)
 🔍 Parsing condition on line 9: "Horde N33 wird entleert (Entleeren Horde N33" (OR: true, NOT: false)
 🔍 Trying to parse step on line 10: "SCHRITT 5: -8)"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 5: -8)" (length: 14)
 🎯 Character codes: Array(14)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 5 - -8)
 📝 Created step: Object
 🔍 Detected condition on line 12: "+ Horde N34 wird entleert (Entleeren Horde N34" (markers: true, indented: false, implicit: false)
 🔍 Parsing condition on line 12: "Horde N34 wird entleert (Entleeren Horde N34" (OR: true, NOT: false)
 🔍 Trying to parse step on line 13: "SCHRITT 5: -8)"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 5: -8)" (length: 14)
 🎯 Character codes: Array(14)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 5 - -8)
 📝 Created step: Object
 🔍 Detected condition on line 15: "NICHT Transportbahn T30A: Stopp Transportbahnen wenn leergedreht bei Pause" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 15: "Transportbahn T30A: Stopp Transportbahnen wenn leergedreht bei Pause" (OR: false, NOT: true)
 🔍 Detected condition on line 16: "NICHT HAND HMI11" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 16: "HAND HMI11" (OR: false, NOT: true)
 🔍 Detected condition on line 17: "Stopp Pumpe Strömungsjets Ausfuhr P04 = Niveau in Salzbad zu niedrig (Niveau Salzbad(N20-400) &lt; 80 %)" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 17: "Stopp Pumpe Strömungsjets Ausfuhr P04 = Niveau in Salzbad zu niedrig (Niveau Salzbad(N20-400) &lt; 80 %)" (OR: false, NOT: false)
 📝 Found variable assignment: "Stopp Pumpe Strömungsjets Ausfuhr P04 = Niveau in Salzbad zu niedrig (Niveau Salzbad(N20-400) &lt; 80 %)"
 🔍 Detected condition on line 22: "+ Störung: Pumpe Strömungsjets Ausfuhr P04" (markers: true, indented: false, implicit: true)
 🔍 Parsing condition on line 22: "Störung: Pumpe Strömungsjets Ausfuhr P04" (OR: true, NOT: false)
 🔍 Detected condition on line 23: "Stopp Pumpe Strömungsjets Ausfuhr P04 wenn Jets nicht unten = NICHT Tür und Strömungsjet zwischen Horden N21/N31 unten (N21-101)" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 23: "Stopp Pumpe Strömungsjets Ausfuhr P04 wenn Jets nicht unten = NICHT Tür und Strömungsjet zwischen Horden N21/N31 unten (N21-101)" (OR: false, NOT: false)
 📝 Found variable assignment: "Stopp Pumpe Strömungsjets Ausfuhr P04 wenn Jets nicht unten = NICHT Tür und Strömungsjet zwischen Horden N21/N31 unten (N21-101)"
 🔍 Detected condition on line 24: "NICHT Strömungsjet für Horde N31 zu (N31-300-GSC)" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 24: "Strömungsjet für Horde N31 zu (N31-300-GSC)" (OR: false, NOT: true)
 🔍 Detected condition on line 25: "+ NICHT Tür und Strömungsjet zwischen Horden N22/2N32 unten (N22-101)" (markers: true, indented: false, implicit: false)
 🔍 Parsing condition on line 25: "Tür und Strömungsjet zwischen Horden N22/2N32 unten (N22-101)" (OR: true, NOT: true)
 🔍 Detected condition on line 26: "NICHT Strömungsjet für Horde N32 zu (N32-300-GSC)" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 26: "Strömungsjet für Horde N32 zu (N32-300-GSC)" (OR: false, NOT: true)
 🔍 Detected condition on line 27: "+ NICHT Tür und Strömungsjet zwischen Horden 2N23/2N33 unten (N23-101)" (markers: true, indented: false, implicit: false)
 🔍 Parsing condition on line 27: "Tür und Strömungsjet zwischen Horden 2N23/2N33 unten (N23-101)" (OR: true, NOT: true)
 🔍 Detected condition on line 28: "NICHT Strömungsjet für Horde N33 zu (N33-300-GSC)" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 28: "Strömungsjet für Horde N33 zu (N33-300-GSC)" (OR: false, NOT: true)
 🔍 Detected condition on line 29: "+ NICHT Tür und Strömungsjet zwischen Horden N24/N34 unten (N24-101)" (markers: true, indented: false, implicit: false)
 🔍 Parsing condition on line 29: "Tür und Strömungsjet zwischen Horden N24/N34 unten (N24-101)" (OR: true, NOT: true)
 🔍 Detected condition on line 30: "NICHT Strömungsjet für Horde N34 zu (N34-300-GSC)" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 30: "Strömungsjet für Horde N34 zu (N34-300-GSC)" (OR: false, NOT: true)
 🔍 Detected condition on line 31: "Strömung in aktive Ausfuhrhorde OK = Pumpe Strömungsjets Ausfuhr P04 dreht" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 31: "Strömung in aktive Ausfuhrhorde OK = Pumpe Strömungsjets Ausfuhr P04 dreht" (OR: false, NOT: false)
 📝 Found variable assignment: "Strömung in aktive Ausfuhrhorde OK = Pumpe Strömungsjets Ausfuhr P04 dreht"
 🔍 Detected condition on line 33: "NICHT Strömungsjet für Horde N31 offen (N31-300-GSC)" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 33: "Strömungsjet für Horde N31 offen (N31-300-GSC)" (OR: false, NOT: true)
 🔍 Detected condition on line 34: "+ Ausfuhr N32 aktiv (Entleeren Horde N32 Entleeren Horde gestartet)" (markers: true, indented: false, implicit: false)
 🔍 Parsing condition on line 34: "Ausfuhr N32 aktiv (Entleeren Horde N32 Entleeren Horde gestartet)" (OR: true, NOT: false)
 🔍 Detected condition on line 35: "NICHT Strömungsjet für Horde N32 offen (N32-300-GSC)" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 35: "Strömungsjet für Horde N32 offen (N32-300-GSC)" (OR: false, NOT: true)
 🔍 Detected condition on line 36: "+ Ausfuhr N33 aktiv (Entleeren Horde N33 Entleeren Horde gestartet)" (markers: true, indented: false, implicit: false)
 🔍 Parsing condition on line 36: "Ausfuhr N33 aktiv (Entleeren Horde N33 Entleeren Horde gestartet)" (OR: true, NOT: false)
 🔍 Detected condition on line 37: "NICHT Strömungsjet für Horde N33 offen (N33-300-GSC)" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 37: "Strömungsjet für Horde N33 offen (N33-300-GSC)" (OR: false, NOT: true)
 🔍 Detected condition on line 38: "+ Ausfuhr N34 aktiv (Entleeren Horde N34 Entleeren Horde gestartet)" (markers: true, indented: false, implicit: false)
 🔍 Parsing condition on line 38: "Ausfuhr N34 aktiv (Entleeren Horde N34 Entleeren Horde gestartet)" (OR: true, NOT: false)
 🔍 Detected condition on line 39: "NICHT Strömungsjet für Horde N34 offen (N34-300-GSC)]" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 39: "Strömungsjet für Horde N34 offen (N34-300-GSC)]" (OR: false, NOT: true)
 🔍 Detected condition on line 41: "Variable 1 (Geschwindigkeit MP04) = = = 25 Hz" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 41: "Variable 1 (Geschwindigkeit MP04) = = = 25 Hz" (OR: false, NOT: false)
 📝 Found variable assignment: "Variable 1 (Geschwindigkeit MP04) = = = 25 Hz"
 🔍 Detected condition on line 42: "NICHT Transportbahn T30A Stopp Transportbahn T30A = 15 Hz" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 42: "Transportbahn T30A Stopp Transportbahn T30A = 15 Hz" (OR: false, NOT: true)
 📝 Found variable assignment: "Transportbahn T30A Stopp Transportbahn T30A = 15 Hz"
 📊 Parse result for Strömungspumpe P04: Object
 🔧 Starting normalization for source: word
 📝 Original text (first 300 chars): Symbolik IDB: Strömungspumpe P04
Start Pumpe Strömungsjets Ausfuhr P04 =
NICHT P04 HAND
[Horde N31 wird entleert (Entleeren Horde N31 SCHRITT 5-8)
N31 auf Position
+
Horde N32 wird entleert (Entleeren Horde N32 SCHRITT 5-8)
N32 auf Position
+
Horde N33 wird entleert (Entleeren Horde N33 SCHRITT 5-8)
 ✅ Normalized text (first 300 chars): Symbolik IDB: Strömungspumpe P04
Start Pumpe Strömungsjets Ausfuhr P04 = NICHT P04 HAND
[Horde N31 wird entleert (Entleeren Horde N31
SCHRITT 5: -8)
N31 auf Position
+ Horde N32 wird entleert (Entleeren Horde N32
SCHRITT 5: -8)
N32 auf Position
+ Horde N33 wird entleert (Entleeren Horde N33
SCHRITT 
 ✅ Stappen gevonden voor Strömungspumpe P04:
   - SCHRITT 5: -8)
   - SCHRITT 5: -8)
   - SCHRITT 5: -8)
   - SCHRITT 5: -8)
 📌 Found program: Strömung Salzbad N20 FB500
 📁 Created program with path: [Salzbad N20] for "Strömung Salzbad N20"
 🗂️ Updated path level 1: "Strömung Salzbad N20" → [Salzbad N20 → Strömung Salzbad N20]
   ↳ IDB naam: Strömung N20
 💾 Saving program: Strömung Salzbad N20
 🔧 Starting normalization for source: word
 📝 Original text (first 300 chars): Symbolik IDB: Strömung N20
Start Zirkulationspumpe linker Seite Salzbad MP01 =
NICHT MP01 HAND
Niveau in Salzbad nicht zu niedrig (Niveau Salzbad(N20-400) &gt; Einstellung)
Stopp Zirkulationspumpe linker Seite MP01 =
Störung: Zirkulationspumpe Salzbad MP01
Variable 1 (Geschwindigkeit MP01) =
= Einst
 ✅ Normalized text (first 300 chars): Symbolik IDB: Strömung N20
Start Zirkulationspumpe linker Seite Salzbad MP01 = NICHT MP01 HAND
Niveau in Salzbad nicht zu niedrig (Niveau Salzbad(N20-400) &gt; Einstellung)
Stopp Zirkulationspumpe linker Seite MP01 = Störung: Zirkulationspumpe Salzbad MP01
Variable 1 (Geschwindigkeit MP01) = = Einst
 ✅ Successfully parsed step: RUHE  - ) = Einstellung Strömung MP01 bei Einfuhr
 📝 Created step: Object
 ✅ Successfully parsed step: RUHE  - )
 📝 Created step: Object
 🔍 Detected condition on line 12: "Strömung Salzbad N20 für Einfuhr OK = Zirkulationspumpe Salzbad MP01 dreht" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 12: "Strömung Salzbad N20 für Einfuhr OK = Zirkulationspumpe Salzbad MP01 dreht" (OR: false, NOT: false)
 📝 Found variable assignment: "Strömung Salzbad N20 für Einfuhr OK = Zirkulationspumpe Salzbad MP01 dreht"
 🔍 Detected condition on line 13: "Geschwindigkeit MP01 = Einstellung Strömung MP01 bei Einfuhr" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 13: "Geschwindigkeit MP01 = Einstellung Strömung MP01 bei Einfuhr" (OR: false, NOT: false)
 📝 Found variable assignment: "Geschwindigkeit MP01 = Einstellung Strömung MP01 bei Einfuhr"
 🔍 Detected condition on line 15: "Start Zirkulationspumpe Salzbad MP02 = NICHT MP02 HAND" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 15: "Start Zirkulationspumpe Salzbad MP02 = NICHT MP02 HAND" (OR: false, NOT: false)
 📝 Found variable assignment: "Start Zirkulationspumpe Salzbad MP02 = NICHT MP02 HAND"
 🔍 Detected condition on line 17: "Stopp Zirkulationspumpe MP02 = Störung: Zirkulationspumpe Salzbad MP02" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 17: "Stopp Zirkulationspumpe MP02 = Störung: Zirkulationspumpe Salzbad MP02" (OR: false, NOT: false)
 📝 Found variable assignment: "Stopp Zirkulationspumpe MP02 = Störung: Zirkulationspumpe Salzbad MP02"
 🔍 Detected condition on line 18: "Variable 1 (Geschwindigkeit MP02) = = Einstellung Strömung MP02 bei kein Einfuhr" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 18: "Variable 1 (Geschwindigkeit MP02) = = Einstellung Strömung MP02 bei kein Einfuhr" (OR: false, NOT: false)
 📝 Found variable assignment: "Variable 1 (Geschwindigkeit MP02) = = Einstellung Strömung MP02 bei kein Einfuhr"
 ✅ Successfully parsed step: RUHE  - ) = Einstellung Strömung MP02 bei Einfuhr
 📝 Created step: Object
 ✅ Successfully parsed step: RUHE  - )
 📝 Created step: Object
 🔍 Detected condition on line 25: "Strömung Salzbad N20 OK = Zirkulationspumpe Salzbad MP02 dreht" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 25: "Strömung Salzbad N20 OK = Zirkulationspumpe Salzbad MP02 dreht" (OR: false, NOT: false)
 📝 Found variable assignment: "Strömung Salzbad N20 OK = Zirkulationspumpe Salzbad MP02 dreht"
 🔍 Detected condition on line 26: "Geschwindigkeit MP02 = Einstellung Strömung MP02 bei Einfuhr" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 26: "Geschwindigkeit MP02 = Einstellung Strömung MP02 bei Einfuhr" (OR: false, NOT: false)
 📝 Found variable assignment: "Geschwindigkeit MP02 = Einstellung Strömung MP02 bei Einfuhr"
 🔍 Detected condition on line 28: "Störung: Niveau in Salzbad N20 zu hoch = Istwert Niveau &gt; = LSH-Niveau" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 28: "Störung: Niveau in Salzbad N20 zu hoch = Istwert Niveau &gt; = LSH-Niveau" (OR: false, NOT: false)
 📝 Found variable assignment: "Störung: Niveau in Salzbad N20 zu hoch = Istwert Niveau &gt; = LSH-Niveau"
 🔍 Detected condition on line 30: "Störung: Niveau in Salzbad N20 zu niedrig = Istwert Niveau &lt; = LSL-Niveau" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 30: "Störung: Niveau in Salzbad N20 zu niedrig = Istwert Niveau &lt; = LSL-Niveau" (OR: false, NOT: false)
 📝 Found variable assignment: "Störung: Niveau in Salzbad N20 zu niedrig = Istwert Niveau &lt; = LSL-Niveau"
 📊 Parse result for Strömung Salzbad N20: Object
 🔧 Starting normalization for source: word
 📝 Original text (first 300 chars): Symbolik IDB: Strömung N20
Start Zirkulationspumpe linker Seite Salzbad MP01 =
NICHT MP01 HAND
Niveau in Salzbad nicht zu niedrig (Niveau Salzbad(N20-400) &gt; Einstellung)
Stopp Zirkulationspumpe linker Seite MP01 =
Störung: Zirkulationspumpe Salzbad MP01
Variable 1 (Geschwindigkeit MP01) =
= Einst
 ✅ Normalized text (first 300 chars): Symbolik IDB: Strömung N20
Start Zirkulationspumpe linker Seite Salzbad MP01 = NICHT MP01 HAND
Niveau in Salzbad nicht zu niedrig (Niveau Salzbad(N20-400) &gt; Einstellung)
Stopp Zirkulationspumpe linker Seite MP01 = Störung: Zirkulationspumpe Salzbad MP01
Variable 1 (Geschwindigkeit MP01) = = Einst
 ✅ Stappen gevonden voor Strömung Salzbad N20:
   - RUST 0: ) = Einstellung Strömung MP01 bei Einfuhr
   - RUST 0: )
   - RUST 0: ) = Einstellung Strömung MP02 bei Einfuhr
   - RUST 0: )
 📌 Found program: Entleeren Salzbad/Füllen Puffertank FB504
 📁 Created program with path: [Salzbad N20 → Strömung Salzbad N20] for "Entleeren Salzbad/Füllen Puffertank"
 🗂️ Updated path level 1: "Entleeren Salzbad/Füllen Puffertank" → [Salzbad N20 → Entleeren Salzbad/Füllen Puffertank]
   ↳ IDB naam: Entleeren N20
 🗂️ Updated path level 0: "Chargedaten" → [Chargedaten → Entleeren Salzbad/Füllen Puffertank]
 💾 Saving program: Entleeren Salzbad/Füllen Puffertank
 🔧 Starting normalization for source: word
 📝 Original text (first 300 chars): Symbolik IDB: Entleeren N20
RUHE Entleeren Salzbad/ Füllen Puffertank
Anfrage Abfuhr
SCHRITT 1 Freigabe?
NICHT Pumpe MP06 dreht
SCHRITT 2 Start Pumpe MP06
Pumpe MP06 dreht
Zeit (0.5 Sek)
SCHRITT 3 Öffnen 125T2FV02
Route_OK (Komm. Signal von SB4: Füllen Tank 125T2)
SCHRITT 4 Start Entleeren läuft
NIC
 ✅ Normalized text (first 300 chars): Symbolik IDB: Entleeren N20
RUHE: Entleeren Salzbad/ Füllen Puffertank
Anfrage Abfuhr
SCHRITT 1: Freigabe?
NICHT Pumpe MP06 dreht
SCHRITT 2: Start Pumpe MP06
Pumpe MP06 dreht
Zeit (0.5 Sek)
SCHRITT 3: Öffnen 125T2FV02
Route_OK (Komm. Signal von SB4: Füllen Tank 125T2)
SCHRITT 4: Start Entleeren läuf
 ✅ Successfully parsed step: RUHE  - Entleeren Salzbad/ Füllen Puffertank
 📝 Created step: Object
 🔍 Trying to parse step on line 4: "SCHRITT 1: Freigabe?"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 1: Freigabe?" (length: 20)
 🎯 Character codes: Array(20)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 1 - Freigabe?
 📝 Created step: Object
 🔍 Detected condition on line 5: "NICHT Pumpe MP06 dreht" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 5: "Pumpe MP06 dreht" (OR: false, NOT: true)
 🔍 Trying to parse step on line 6: "SCHRITT 2: Start Pumpe MP06"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 2: Start Pumpe MP06" (length: 27)
 🎯 Character codes: Array(27)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 2 - Start Pumpe MP06
 📝 Created step: Object
 🔍 Trying to parse step on line 9: "SCHRITT 3: Öffnen 125T2FV02"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 3: Öffnen 125T2FV02" (length: 27)
 🎯 Character codes: Array(27)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 3 - Öffnen 125T2FV02
 📝 Created step: Object
 🔍 Detected condition on line 10: "Route_OK (Komm. Signal von SB4: Füllen Tank 125T2)" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 10: "Route_OK (Komm. Signal von SB4: Füllen Tank 125T2)" (OR: false, NOT: false)
 🔍 Trying to parse step on line 11: "SCHRITT 4: Start Entleeren läuft"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 4: Start Entleeren läuft" (length: 32)
 🎯 Character codes: Array(32)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 4 - Start Entleeren läuft
 📝 Created step: Object
 🔍 Detected condition on line 12: "NICHT Freigabe ??" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 12: "Freigabe ??" (OR: false, NOT: true)
 🔍 Trying to parse step on line 13: "SCHRITT 5: Stopp Entleeren Salzbad"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 5: Stopp Entleeren Salzbad" (length: 34)
 🎯 Character codes: Array(34)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 5 - Stopp Entleeren Salzbad
 📝 Created step: Object
 🔍 Trying to parse step on line 15: "SCHRITT 6: Stopp Pumpe 2MP62/2MP72"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 6: Stopp Pumpe 2MP62/2MP72" (length: 34)
 🎯 Character codes: Array(34)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 6 - Stopp Pumpe 2MP62/2MP72
 📝 Created step: Object
 🔍 Detected condition on line 16: "NICHT Pumpe 2MP62 dreht" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 16: "Pumpe 2MP62 dreht" (OR: false, NOT: true)
 🔍 Detected condition on line 17: "NICHT Pumpe 2MP72 dreht" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 17: "Pumpe 2MP72 dreht" (OR: false, NOT: true)
 🔍 Trying to parse step on line 18: "SCHRITT 7: Schließen 125T2FV02"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 7: Schließen 125T2FV02" (length: 30)
 🎯 Character codes: Array(30)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 7 - Schließen 125T2FV02
 📝 Created step: Object
 🔍 Detected condition on line 19: "NICHT Route_OK (Komm. Signal von SB4: Füllen Tank 125T2)" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 19: "Route_OK (Komm. Signal von SB4: Füllen Tank 125T2)" (OR: false, NOT: true)
 🔍 Trying to parse step on line 20: "SCHRITT 8: Fertig"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 8: Fertig" (length: 17)
 🎯 Character codes: Array(17)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 8 - Fertig
 📝 Created step: Object
 🔍 Detected condition on line 21: "Freigabe von Puffertanks = Route_OK (Komm. Signal von puffertank)" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 21: "Freigabe von Puffertanks = Route_OK (Komm. Signal von puffertank)" (OR: false, NOT: false)
 📝 Found variable assignment: "Freigabe von Puffertanks = Route_OK (Komm. Signal von puffertank)"
 🔍 Detected condition on line 22: "NICHT Handbedienung oder Störung aktiv" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 22: "Handbedienung oder Störung aktiv" (OR: false, NOT: true)
 🔍 Detected condition on line 23: "Handbedienung oder Störung aktiv = 2MP62 auf HAND" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 23: "Handbedienung oder Störung aktiv = 2MP62 auf HAND" (OR: false, NOT: false)
 📝 Found variable assignment: "Handbedienung oder Störung aktiv = 2MP62 auf HAND"
 🔍 Detected condition on line 24: "+ 2MP62 Störung" (markers: true, indented: false, implicit: false)
 🔍 Parsing condition on line 24: "2MP62 Störung" (OR: true, NOT: false)
 🔍 Detected condition on line 25: "+ 2MP72 auf HAND" (markers: true, indented: false, implicit: false)
 🔍 Parsing condition on line 25: "2MP72 auf HAND" (OR: true, NOT: false)
 🔍 Detected condition on line 26: "+ 2MP72 Störung" (markers: true, indented: false, implicit: false)
 🔍 Parsing condition on line 26: "2MP72 Störung" (OR: true, NOT: false)
 🔍 Detected condition on line 27: "Anfrage Abfuhr = ACTSP-Niveau N20" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 27: "Anfrage Abfuhr = ACTSP-Niveau N20" (OR: false, NOT: false)
 📝 Found variable assignment: "Anfrage Abfuhr = ACTSP-Niveau N20"
 🔍 Detected condition on line 29: "Freigabe (Komm. Signal von SB4: Füllen Tank xx??)" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 29: "Freigabe (Komm. Signal von SB4: Füllen Tank xx??)" (OR: false, NOT: false)
 🔍 Detected condition on line 30: "Freigabe Pumpe MP62 Pumpe von Salzbad 2.1 nach Puffertank 125T2 =" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 30: "Freigabe Pumpe MP62 Pumpe von Salzbad 2.1 nach Puffertank 125T2 =" (OR: false, NOT: false)
 📝 Found variable assignment: "Freigabe Pumpe MP62 Pumpe von Salzbad 2.1 nach Puffertank 125T2 ="
 🔍 Trying to parse step on line 31: "SCHRITT 2: -5"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 2: -5" (length: 13)
 🎯 Character codes: Array(13)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 2 - -5
 📝 Created step: Object
 🔍 Detected condition on line 32: "NICHT LSL-Niveau 2N15" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 32: "LSL-Niveau 2N15" (OR: false, NOT: true)
 🔍 Detected condition on line 34: "Stopp Pumpe 2MP62 Pumpe von Salzbad 2.1 nach Puffertank 125T2 = Störung: Pumpe 2MP62 Pumpe von Salzbad nach Puffertanks" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 34: "Stopp Pumpe 2MP62 Pumpe von Salzbad 2.1 nach Puffertank 125T2 = Störung: Pumpe 2MP62 Pumpe von Salzbad nach Puffertanks" (OR: false, NOT: false)
 📝 Found variable assignment: "Stopp Pumpe 2MP62 Pumpe von Salzbad 2.1 nach Puffertank 125T2 = Störung: Pumpe 2MP62 Pumpe von Salzbad nach Puffertanks"
 🔍 Detected condition on line 35: "+ Störung: Analog Eingang 2N15-400-PT (Niveaumessung in Salzbad)" (markers: true, indented: false, implicit: true)
 🔍 Parsing condition on line 35: "Störung: Analog Eingang 2N15-400-PT (Niveaumessung in Salzbad)" (OR: true, NOT: false)
 🔍 Detected condition on line 36: "Freigabe Pumpe 2MP72 Pumpe von Salzbad 2.2 nach Puffertank 125T2 =" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 36: "Freigabe Pumpe 2MP72 Pumpe von Salzbad 2.2 nach Puffertank 125T2 =" (OR: false, NOT: false)
 📝 Found variable assignment: "Freigabe Pumpe 2MP72 Pumpe von Salzbad 2.2 nach Puffertank 125T2 ="
 🔍 Trying to parse step on line 37: "SCHRITT 2: -5"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 2: -5" (length: 13)
 🎯 Character codes: Array(13)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 2 - -5
 📝 Created step: Object
 🔍 Detected condition on line 38: "NICHT LSL-Niveau 2N17" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 38: "LSL-Niveau 2N17" (OR: false, NOT: true)
 🔍 Detected condition on line 40: "Stopp Pumpe 2MP72 Pumpe von Salzbad 2.2 nach Puffertank 125T2 = Störung: Pumpe 2MP72 Pumpe von Salzbad nach Puffertanks" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 40: "Stopp Pumpe 2MP72 Pumpe von Salzbad 2.2 nach Puffertank 125T2 = Störung: Pumpe 2MP72 Pumpe von Salzbad nach Puffertanks" (OR: false, NOT: false)
 📝 Found variable assignment: "Stopp Pumpe 2MP72 Pumpe von Salzbad 2.2 nach Puffertank 125T2 = Störung: Pumpe 2MP72 Pumpe von Salzbad nach Puffertanks"
 🔍 Detected condition on line 41: "+ Störung: Analog Eingang 2N17-400-PT (Niveaumessung in Salzbad)" (markers: true, indented: false, implicit: true)
 🔍 Parsing condition on line 41: "Störung: Analog Eingang 2N17-400-PT (Niveaumessung in Salzbad)" (OR: true, NOT: false)
 🔍 Detected condition on line 42: "Freigabe Öffnen Zufuhrventil Tank 125T2FV02 =" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 42: "Freigabe Öffnen Zufuhrventil Tank 125T2FV02 =" (OR: false, NOT: false)
 📝 Found variable assignment: "Freigabe Öffnen Zufuhrventil Tank 125T2FV02 ="
 🔍 Trying to parse step on line 43: "SCHRITT 3: -6"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 3: -6" (length: 13)
 🎯 Character codes: Array(13)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 3 - -6
 📝 Created step: Object
 🔍 Detected condition on line 44: "Anfrage (Komm. Signal nach SB4: Füllen Tank: Anfrage Salzlake abfuhren von Salzbad nach Puffertank) = Anfrage Abfuhr" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 44: "Anfrage (Komm. Signal nach SB4: Füllen Tank: Anfrage Salzlake abfuhren von Salzbad nach Puffertank) = Anfrage Abfuhr" (OR: false, NOT: false)
 📝 Found variable assignment: "Anfrage (Komm. Signal nach SB4: Füllen Tank: Anfrage Salzlake abfuhren von Salzbad nach Puffertank) = Anfrage Abfuhr"
 🔍 Detected condition on line 46: "Läuft (Komm. Signal nach SB4: Füllen Tank: Zufuhrpumpe 2MP62 oder 2MP72 nach Puffertank läuft) = Pumpe 2MP62 dreht" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 46: "Läuft (Komm. Signal nach SB4: Füllen Tank: Zufuhrpumpe 2MP62 oder 2MP72 nach Puffertank läuft) = Pumpe 2MP62 dreht" (OR: false, NOT: false)
 📝 Found variable assignment: "Läuft (Komm. Signal nach SB4: Füllen Tank: Zufuhrpumpe 2MP62 oder 2MP72 nach Puffertank läuft) = Pumpe 2MP62 dreht"
 🔍 Detected condition on line 47: "+ Pumpe 2MP72 dreht" (markers: true, indented: false, implicit: false)
 🔍 Parsing condition on line 47: "Pumpe 2MP72 dreht" (OR: true, NOT: false)
 📊 Parse result for Entleeren Salzbad/Füllen Puffertank: Object
 🔧 Starting normalization for source: word
 📝 Original text (first 300 chars): Symbolik IDB: Entleeren N20
RUHE Entleeren Salzbad/ Füllen Puffertank
Anfrage Abfuhr
SCHRITT 1 Freigabe?
NICHT Pumpe MP06 dreht
SCHRITT 2 Start Pumpe MP06
Pumpe MP06 dreht
Zeit (0.5 Sek)
SCHRITT 3 Öffnen 125T2FV02
Route_OK (Komm. Signal von SB4: Füllen Tank 125T2)
SCHRITT 4 Start Entleeren läuft
NIC
 ✅ Normalized text (first 300 chars): Symbolik IDB: Entleeren N20
RUHE: Entleeren Salzbad/ Füllen Puffertank
Anfrage Abfuhr
SCHRITT 1: Freigabe?
NICHT Pumpe MP06 dreht
SCHRITT 2: Start Pumpe MP06
Pumpe MP06 dreht
Zeit (0.5 Sek)
SCHRITT 3: Öffnen 125T2FV02
Route_OK (Komm. Signal von SB4: Füllen Tank 125T2)
SCHRITT 4: Start Entleeren läuf
 ✅ Stappen gevonden voor Entleeren Salzbad/Füllen Puffertank:
   - RUST 0: Entleeren Salzbad/ Füllen Puffertank
   - SCHRITT 1: Freigabe?
   - SCHRITT 2: Start Pumpe MP06
   - SCHRITT 3: Öffnen 125T2FV02
   - SCHRITT 4: Start Entleeren läuft
   - SCHRITT 5: Stopp Entleeren Salzbad
   - SCHRITT 6: Stopp Pumpe 2MP62/2MP72
   - SCHRITT 7: Schließen 125T2FV02
   - SCHRITT 8: Fertig
   - SCHRITT 2: -5
   - SCHRITT 2: -5
   - SCHRITT 3: -6
 📌 Found program: Datenübertragung mit K5 FB550
 📁 Created program with path: [Chargedaten] for "Datenübertragung mit K5"
 🗂️ Updated path level 1: "Datenübertragung mit K5" → [Chargedaten → Datenübertragung mit K5]
 💾 Saving program: Datenübertragung mit K5
 🔧 Starting normalization for source: word
 📝 Original text (first 300 chars): Aus Zeile 1 der Produktionstabelle von K5=5 kopieren wir direkt die Chargedaten nach Salzbad 5.Das sind die Chargedaten von der aktuellen Charge die in Einfuhrrinne N10/N11 eingeströmt wird.
Das sind die nachfolgende Chargedaten:
Chargenummer	Aktuelle Chargenummer
Käsekode	Aktuelle Käsekode
Besonder
 ✅ Normalized text (first 300 chars): Aus Zeile 1 der Produktionstabelle von K5 = 5 kopieren wir direkt die Chargedaten nach Salzbad 5.Das sind die Chargedaten von der aktuellen Charge die in Einfuhrrinne N10/N11 eingeströmt wird.
Das sind die nachfolgende Chargedaten: Chargenummer Aktuelle Chargenummer
Käsekode Aktuelle Käsekode
Besond
 📊 Parse result for Datenübertragung mit K5: Object
 🔧 Starting normalization for source: word
 📝 Original text (first 300 chars): Aus Zeile 1 der Produktionstabelle von K5=5 kopieren wir direkt die Chargedaten nach Salzbad 5.Das sind die Chargedaten von der aktuellen Charge die in Einfuhrrinne N10/N11 eingeströmt wird.
Das sind die nachfolgende Chargedaten:
Chargenummer	Aktuelle Chargenummer
Käsekode	Aktuelle Käsekode
Besonder
 ✅ Normalized text (first 300 chars): Aus Zeile 1 der Produktionstabelle von K5 = 5 kopieren wir direkt die Chargedaten nach Salzbad 5.Das sind die Chargedaten von der aktuellen Charge die in Einfuhrrinne N10/N11 eingeströmt wird.
Das sind die nachfolgende Chargedaten: Chargenummer Aktuelle Chargenummer
Käsekode Aktuelle Käsekode
Besond
 ⚠️ Geen stappen gevonden voor Datenübertragung mit K5
overrideMethod @ installHook.js:1
 📌 Found program: Chargedaten N10 FB552
 📁 Created program with path: [Chargedaten → Datenübertragung mit K5] for "Chargedaten N10"
 🗂️ Updated path level 1: "Chargedaten N10" → [Chargedaten → Chargedaten N10]
   ↳ IDB naam: Chargedaten N10
 💾 Saving program: Chargedaten N10
 🔧 Starting normalization for source: word
 📝 Original text (first 300 chars): Symbolik IDB: Chargedaten N10
RUHE (Chargedaten N10)
Chargenummer (Komm. von K5) &lt;&gt; 0
Käsekode (Komm. von K5) &lt;&gt; 0
Anzahl Käse (Komm. von K5) &lt;&gt; 0
+
von SCHRITT 5
ohne Bedingungen
SCHRITT 1 (Kopieren Daten von K5 nach neue Chargedaten)
Kopiert (Immer 1)
+
von RUHE
Manuell eingeführ
 ✅ Normalized text (first 300 chars): Symbolik IDB: Chargedaten N10
RUHE: Chargedaten N10)
Chargenummer (Komm. von K5) &lt;&gt; 0
Käsekode (Komm. von K5) &lt;&gt; 0
Anzahl Käse (Komm. von K5) &lt;&gt; 0
+ von
SCHRITT 5: ohne Bedingungen
SCHRITT 1: (Kopieren Daten von K5 nach neue Chargedaten)
Kopiert (Immer 1)
+ von
RUHE: Manuell eingef
 ✅ Successfully parsed step: RUHE  - Chargedaten N10)
 📝 Created step: Object
 🔍 Detected condition on line 6: "+ von" (markers: true, indented: false, implicit: false)
 🔍 Parsing condition on line 6: "von" (OR: true, NOT: false)
 🔍 Trying to parse step on line 7: "SCHRITT 5: ohne Bedingungen"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 5: ohne Bedingungen" (length: 27)
 🎯 Character codes: Array(27)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 5 - ohne Bedingungen
 📝 Created step: Object
 🔍 Trying to parse step on line 8: "SCHRITT 1: (Kopieren Daten von K5 nach neue Chargedaten)"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 1: (Kopieren Daten von K5 nach neue Chargedaten)" (length: 56)
 🎯 Character codes: Array(56)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 1 - (Kopieren Daten von K5 nach neue Chargedaten)
 📝 Created step: Object
 🔍 Detected condition on line 10: "+ von" (markers: true, indented: false, implicit: false)
 🔍 Parsing condition on line 10: "von" (OR: true, NOT: false)
 ✅ Successfully parsed step: RUHE  - Manuell eingeführte Chargedaten bei Aufstart: Einfuhr noch nicht gestartet(Hauptprogramm Einfuhr
 📝 Created step: Object
 ✅ Successfully parsed step: RUHE  - )
 📝 Created step: Object
 🔍 Trying to parse step on line 16: "SCHRITT 2: (Freigabe neue Chargedaten kopieren nach N10?)"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 2: (Freigabe neue Chargedaten kopieren nach N10?)" (length: 57)
 🎯 Character codes: Array(57)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 2 - (Freigabe neue Chargedaten kopieren nach N10?)
 📝 Created step: Object
 🔍 Trying to parse step on line 18: "SCHRITT 3: (Neue Chargedaten kopieren nach N10)"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 3: (Neue Chargedaten kopieren nach N10)" (length: 47)
 🎯 Character codes: Array(47)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 3 - (Neue Chargedaten kopieren nach N10)
 📝 Created step: Object
 🔍 Trying to parse step on line 20: "SCHRITT 4: (Charge aktiv / Zählen Käse)"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 4: (Charge aktiv / Zählen Käse)" (length: 39)
 🎯 Character codes: Array(39)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 4 - (Charge aktiv / Zählen Käse)
 📝 Created step: Object
 🔍 Detected condition on line 21: "Anzahl Käse von Charge im N10 &gt; = Anzahl Käse (Chargedaten N10)" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 21: "Anzahl Käse von Charge im N10 &gt; = Anzahl Käse (Chargedaten N10)" (OR: false, NOT: false)
 📝 Found variable assignment: "Anzahl Käse von Charge im N10 &gt; = Anzahl Käse (Chargedaten N10)"
 🔍 Detected condition on line 22: "Nicht Entleeren Einfuhrrinne von K5 bis N10 (Sortentrennung NICHT" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 22: "Entleeren Einfuhrrinne von K5 bis N10 (Sortentrennung NICHT" (OR: false, NOT: true)
 🔍 Trying to parse step on line 23: "SCHRITT 1: )"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 1: )" (length: 12)
 🎯 Character codes: Array(12)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 1 - )
 📝 Created step: Object
 🔍 Detected condition on line 24: "+ Einfuhrrinne entleert bis Blockierung N10 (Sortentrennung" (markers: true, indented: false, implicit: false)
 🔍 Parsing condition on line 24: "Einfuhrrinne entleert bis Blockierung N10 (Sortentrennung" (OR: true, NOT: false)
 🔍 Trying to parse step on line 25: "SCHRITT 2: )"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 2: )" (length: 12)
 🎯 Character codes: Array(12)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 2 - )
 📝 Created step: Object
 🔍 Trying to parse step on line 26: "SCHRITT 5: (Zurück nach SCHRITT 1)"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 5: (Zurück nach SCHRITT 1)" (length: 34)
 🎯 Character codes: Array(34)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 5 - (Zurück nach SCHRITT 1)
 📝 Created step: Object
 🔍 Trying to parse step on line 28: "SCHRITT 1: -5"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 1: -5" (length: 13)
 🎯 Character codes: Array(13)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 1 - -5
 📝 Created step: Object
 🔍 Trying to parse step on line 29: "Einfuhr beendet (Hauptprogramm Einfuhr SCHRITT ??)"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "Einfuhr beendet (Hauptprogramm Einfuhr SCHRITT ??)" (length: 50)
 🎯 Character codes: Array(50)
 🎯 Step match result: null
 🔍 Detected condition on line 29: "Einfuhr beendet (Hauptprogramm Einfuhr SCHRITT ??)" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 29: "Einfuhr beendet (Hauptprogramm Einfuhr SCHRITT ??)" (OR: false, NOT: false)
 🔍 Detected condition on line 30: "+ Ende Produktion (K5 in" (markers: true, indented: false, implicit: false)
 🔍 Parsing condition on line 30: "Ende Produktion (K5 in" (OR: true, NOT: false)
 ✅ Successfully parsed step: RUHE  - ) (Komm. von K5)
 📝 Created step: Object
 🔍 Trying to parse step on line 32: "SCHRITT 6: (Kein Chargedaten mehr von K5?)"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 6: (Kein Chargedaten mehr von K5?)" (length: 42)
 🎯 Character codes: Array(42)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 6 - (Kein Chargedaten mehr von K5?)
 📝 Created step: Object
 🔍 Detected condition on line 33: "Chargenummer (Komm. von K5) = 0" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 33: "Chargenummer (Komm. von K5) = 0" (OR: false, NOT: false)
 📝 Found variable assignment: "Chargenummer (Komm. von K5) = 0"
 🔍 Detected condition on line 34: "Käsekode (Komm. von K5) = 0" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 34: "Käsekode (Komm. von K5) = 0" (OR: false, NOT: false)
 📝 Found variable assignment: "Käsekode (Komm. von K5) = 0"
 🔍 Detected condition on line 35: "Anzahl Käse (Komm. von K5) = 0" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 35: "Anzahl Käse (Komm. von K5) = 0" (OR: false, NOT: false)
 📝 Found variable assignment: "Anzahl Käse (Komm. von K5) = 0"
 🔍 Detected condition on line 36: "+ DT Start Einfuhr" (markers: true, indented: false, implicit: false)
 🔍 Parsing condition on line 36: "DT Start Einfuhr" (OR: true, NOT: false)
 🔍 Detected condition on line 37: "+ Ende Produktion (K5 in" (markers: true, indented: false, implicit: false)
 🔍 Parsing condition on line 37: "Ende Produktion (K5 in" (OR: true, NOT: false)
 ✅ Successfully parsed step: RUHE  - ) (Komm. von K5)
 📝 Created step: Object
 🔍 Trying to parse step on line 39: "SCHRITT 7: (Fertig)"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 7: (Fertig)" (length: 19)
 🎯 Character codes: Array(19)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 7 - (Fertig)
 📝 Created step: Object
 🔍 Detected condition on line 40: "Chargedaten OK = Chargenummer (Neue Chargedaten) &lt;&gt; 0" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 40: "Chargedaten OK = Chargenummer (Neue Chargedaten) &lt;&gt; 0" (OR: false, NOT: false)
 📝 Found variable assignment: "Chargedaten OK = Chargenummer (Neue Chargedaten) &lt;&gt; 0"
 🔍 Detected condition on line 41: "Besonderheit (Neue Chargedaten) = = 0,1,2" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 41: "Besonderheit (Neue Chargedaten) = = 0,1,2" (OR: false, NOT: false)
 📝 Found variable assignment: "Besonderheit (Neue Chargedaten) = = 0,1,2"
 🔍 Detected condition on line 46: "Neue Chargedaten = = Chargedaten (Komm. von K5)" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 46: "Neue Chargedaten = = Chargedaten (Komm. von K5)" (OR: false, NOT: false)
 📝 Found variable assignment: "Neue Chargedaten = = Chargedaten (Komm. von K5)"
 🔍 Trying to parse step on line 47: "SCHRITT 1: 0"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 1: 0" (length: 12)
 🎯 Character codes: Array(12)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 1 - 0
 📝 Created step: Object
 🔍 Trying to parse step on line 48: "SCHRITT 7: Chargedaten T10 = = Chargedaten (Neue Chargedaten)"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 7: Chargedaten T10 = = Chargedaten (Neue Chargedaten)" (length: 61)
 🎯 Character codes: Array(61)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 7 - Chargedaten T10 = = Chargedaten (Neue Chargedaten)
 📝 Created step: Object
 🔍 Trying to parse step on line 49: "SCHRITT 3: 0"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 3: 0" (length: 12)
 🎯 Character codes: Array(12)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 3 - 0
 📝 Created step: Object
 ✅ Successfully parsed step: RUHE  - Zähler 1 (Anzahl gezählte Käse von Charge bei N10) = +1
 📝 Created step: Object
 🔍 Trying to parse step on line 51: "SCHRITT 4: Käse detektiert auf mitten 2T09 (Käsezähler T09"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 4: Käse detektiert auf mitten 2T09 (Käsezähler T09" (length: 58)
 🎯 Character codes: Array(58)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 4 - Käse detektiert auf mitten 2T09 (Käsezähler T09
 📝 Created step: Object
 🔍 Trying to parse step on line 52: "SCHRITT 1: &amp;2) = 0"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 1: &amp;2) = 0" (length: 22)
 🎯 Character codes: Array(22)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 1 - &amp;2) = 0
 📝 Created step: Object
 ✅ Successfully parsed step: RUHE  - [Chargenummer (Komm. von K2) = 0
 📝 Created step: Object
 🔍 Detected condition on line 54: "Käsekode (Komm. von K2) = 0" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 54: "Käsekode (Komm. von K2) = 0" (OR: false, NOT: false)
 📝 Found variable assignment: "Käsekode (Komm. von K2) = 0"
 🔍 Detected condition on line 55: "Anzahl Käse (Komm. von K2) = 0" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 55: "Anzahl Käse (Komm. von K2) = 0" (OR: false, NOT: false)
 📝 Found variable assignment: "Anzahl Käse (Komm. von K2) = 0"
 🔍 Detected condition on line 56: "+ Bedienungsfunktionen SB2.2 Einfuhr EIN (NUR BEI BAD 2.1B: 2T19)]" (markers: true, indented: false, implicit: true)
 🔍 Parsing condition on line 56: "Bedienungsfunktionen SB2.2 Einfuhr EIN (NUR BEI BAD 2.1B: 2T19)]" (OR: true, NOT: false)
 🔍 Trying to parse step on line 57: "+ SCHRITT 5: Störung: Chargenummer von K2 nicht OK ="
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "+ SCHRITT 5: Störung: Chargenummer von K2 nicht OK =" (length: 52)
 🎯 Character codes: Array(52)
 🎯 Step match result: null
 🔍 Detected condition on line 57: "+ SCHRITT 5: Störung: Chargenummer von K2 nicht OK =" (markers: true, indented: false, implicit: true)
 🔍 Parsing condition on line 57: "SCHRITT 5: Störung: Chargenummer von K2 nicht OK =" (OR: true, NOT: false)
 📝 Found variable assignment: "SCHRITT 5: Störung: Chargenummer von K2 nicht OK ="
 🔍 Trying to parse step on line 58: "SCHRITT 2: [Chargenummer (Neue Chargedaten) = 0"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 2: [Chargenummer (Neue Chargedaten) = 0" (length: 47)
 🎯 Character codes: Array(47)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 2 - [Chargenummer (Neue Chargedaten) = 0
 📝 Created step: Object
 🔍 Detected condition on line 59: "Störung: Käsekode von K2 nicht OK =" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 59: "Störung: Käsekode von K2 nicht OK =" (OR: false, NOT: false)
 📝 Found variable assignment: "Störung: Käsekode von K2 nicht OK ="
 🔍 Trying to parse step on line 60: "SCHRITT 2: [Käsekode (Neue Chargedaten) = 0"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 2: [Käsekode (Neue Chargedaten) = 0" (length: 43)
 🎯 Character codes: Array(43)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 2 - [Käsekode (Neue Chargedaten) = 0
 📝 Created step: Object
 🔍 Detected condition on line 61: "+ NICHT Käsekode besteht]" (markers: true, indented: false, implicit: false)
 🔍 Parsing condition on line 61: "Käsekode besteht]" (OR: true, NOT: true)
 🔍 Detected condition on line 62: "Störung: Besonderheit von K2 nicht OK =" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 62: "Störung: Besonderheit von K2 nicht OK =" (OR: false, NOT: false)
 📝 Found variable assignment: "Störung: Besonderheit von K2 nicht OK ="
 🔍 Trying to parse step on line 63: "SCHRITT 2: Besonderheit (Neue Chargedaten) &lt;&gt; 0,1,2"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 2: Besonderheit (Neue Chargedaten) &lt;&gt; 0,1,2" (length: 57)
 🎯 Character codes: Array(57)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 2 - Besonderheit (Neue Chargedaten) &lt;&gt; 0,1,2
 📝 Created step: Object
 🔍 Detected condition on line 64: "Störung: Anzahl Käse von K2 nicht OK =" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 64: "Störung: Anzahl Käse von K2 nicht OK =" (OR: false, NOT: false)
 📝 Found variable assignment: "Störung: Anzahl Käse von K2 nicht OK ="
 🔍 Trying to parse step on line 65: "SCHRITT 2: Anzahl Käse (Neue Chargedaten) = 0"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 2: Anzahl Käse (Neue Chargedaten) = 0" (length: 45)
 🎯 Character codes: Array(45)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 2 - Anzahl Käse (Neue Chargedaten) = 0
 📝 Created step: Object
 🔍 Detected condition on line 66: "Störung: Sollwert Salzungzeit ins Rezept nicht OK =" (markers: false, indented: false, implicit: true)
 🔍 Parsing condition on line 66: "Störung: Sollwert Salzungzeit ins Rezept nicht OK =" (OR: false, NOT: false)
 📝 Found variable assignment: "Störung: Sollwert Salzungzeit ins Rezept nicht OK ="
 🔍 Trying to parse step on line 67: "SCHRITT 2: NICHT Salzungszeit ins Rezept gültig"
 Available step keywords: Object
 🎯 Step pattern source: ^(RUST|RUHE|IDLE|STAP|SCHRITT|STEP)(?:\s+(\d+))?:\s*(.*)$
 🎯 Testing line: "SCHRITT 2: NICHT Salzungszeit ins Rezept gültig" (length: 47)
 🎯 Character codes: Array(47)
 🎯 Step match result: Array(4)
 ✅ Successfully parsed step: SCHRITT 2 - NICHT Salzungszeit ins Rezept gültig
 📝 Created step: Object
 📊 Parse result for Chargedaten N10: Object
 🔧 Starting normalization for source: word
 📝 Original text (first 300 chars): Symbolik IDB: Chargedaten N10
RUHE (Chargedaten N10)
Chargenummer (Komm. von K5) &lt;&gt; 0
Käsekode (Komm. von K5) &lt;&gt; 0
Anzahl Käse (Komm. von K5) &lt;&gt; 0
+
von SCHRITT 5
ohne Bedingungen
SCHRITT 1 (Kopieren Daten von K5 nach neue Chargedaten)
Kopiert (Immer 1)
+
von RUHE
Manuell eingeführ
 ✅ Normalized text (first 300 chars): Symbolik IDB: Chargedaten N10
RUHE: Chargedaten N10)
Chargenummer (Komm. von K5) &lt;&gt; 0
Käsekode (Komm. von K5) &lt;&gt; 0
Anzahl Käse (Komm. von K5) &lt;&gt; 0
+ von
SCHRITT 5: ohne Bedingungen
SCHRITT 1: (Kopieren Daten von K5 nach neue Chargedaten)
Kopiert (Immer 1)
+ von
RUHE: Manuell eingef
 ✅ Stappen gevonden voor Chargedaten N10:
   - RUST 0: Chargedaten N10)
   - SCHRITT 5: ohne Bedingungen
   - SCHRITT 1: (Kopieren Daten von K5 nach neue Chargedaten)
   - RUST 0: Manuell eingeführte Chargedaten bei Aufstart: Einfuhr noch nicht gestartet(Hauptprogramm Einfuhr
   - RUST 0: )
   - SCHRITT 2: (Freigabe neue Chargedaten kopieren nach N10?)
   - SCHRITT 3: (Neue Chargedaten kopieren nach N10)
   - SCHRITT 4: (Charge aktiv / Zählen Käse)
   - SCHRITT 1: )
   - SCHRITT 2: )
   - SCHRITT 5: (Zurück nach SCHRITT 1)
   - SCHRITT 1: -5
   - RUST 0: ) (Komm. von K5)
   - SCHRITT 6: (Kein Chargedaten mehr von K5?)
   - RUST 0: ) (Komm. von K5)
   - SCHRITT 7: (Fertig)
   - SCHRITT 1: 0
   - SCHRITT 7: Chargedaten T10 = = Chargedaten (Neue Chargedaten)
   - SCHRITT 3: 0
   - RUST 0: Zähler 1 (Anzahl gezählte Käse von Charge bei N10) = +1
   - SCHRITT 4: Käse detektiert auf mitten 2T09 (Käsezähler T09
   - SCHRITT 1: &amp;2) = 0
   - RUST 0: [Chargenummer (Komm. von K2) = 0
   - SCHRITT 2: [Chargenummer (Neue Chargedaten) = 0
   - SCHRITT 2: [Käsekode (Neue Chargedaten) = 0
   - SCHRITT 2: Besonderheit (Neue Chargedaten) &lt;&gt; 0,1,2
   - SCHRITT 2: Anzahl Käse (Neue Chargedaten) = 0
   - SCHRITT 2: NICHT Salzungszeit ins Rezept gültig
 📌 Found program: Käserezept FC600
 📁 Created program with path: [Chargedaten] for "Käserezept"
 🗂️ Updated path level 0: "Käserezept" → [Käserezept → Chargedaten N10]
 💾 Saving program: Käserezept
 🔧 Starting normalization for source: word
 📝 Original text (first 300 chars): Es gibt 50 Käserezepte (gespeichert in DB600).
Das Käserezept besteht aus die folgende Parameter:
-Rezeptnummer
-Käsekode
-Rezeptname
-Salzungszeit
Mit DT Anforderung wird das selektierte Rezept (1..50) kopiert nach HMI01 (Käserezept 0). In dieses Rezept 0 können die Daten eingegeben oder geändert w
 ✅ Normalized text (first 300 chars): Es gibt 50 Käserezepte (gespeichert in DB600).
Das Käserezept besteht aus die folgende Parameter: - Rezeptnummer
- Käsekode
- Rezeptname
- Salzungszeit
Mit DT Anforderung wird das selektierte Rezept (1..50) kopiert nach HMI01 (Käserezept 0). In dieses Rezept 0 können die Daten eingegeben oder geände
 📊 Parse result for Käserezept: Object
 🔧 Starting normalization for source: word
 📝 Original text (first 300 chars): Es gibt 50 Käserezepte (gespeichert in DB600).
Das Käserezept besteht aus die folgende Parameter:
-Rezeptnummer
-Käsekode
-Rezeptname
-Salzungszeit
Mit DT Anforderung wird das selektierte Rezept (1..50) kopiert nach HMI01 (Käserezept 0). In dieses Rezept 0 können die Daten eingegeben oder geändert w
 ✅ Normalized text (first 300 chars): Es gibt 50 Käserezepte (gespeichert in DB600).
Das Käserezept besteht aus die folgende Parameter: - Rezeptnummer
- Käsekode
- Rezeptname
- Salzungszeit
Mit DT Anforderung wird das selektierte Rezept (1..50) kopiert nach HMI01 (Käserezept 0). In dieses Rezept 0 können die Daten eingegeben oder geände
 ⚠️ Geen stappen gevonden voor Käserezept
overrideMethod @ installHook.js:1
 📌 Found program: Hordedaten FB701
 📁 Created program with path: [Käserezept] for "Hordedaten"
 🗂️ Updated path level 0: "Hordedaten" → [Hordedaten]
   ↳ IDB naam: 2N11_Käse
   ↳ IDB naam: 2N12_Käse
   ↳ IDB naam: 2N13_Käse
   ↳ IDB naam: 2N14_Käse
   ↳ IDB naam: 2N31_Käse
   ↳ IDB naam: 2N32_Käse
   ↳ IDB naam: 2N33_Käse
   ↳ IDB naam: 2N34_Käse
   ↳ IDB naam: 2N11_schreiben	DB1011: 2N11_Hordedaten
   ↳ IDB naam: 2N12_schreiben	DB1012: 2N12_Hordedaten
   ↳ IDB naam: 2N13_schreiben	DB1013: 2N13_Hordedaten
   ↳ IDB naam: 2N14_schreiben	DB1014: 2N14_Hordedaten
   ↳ IDB naam: 2N31_schreiben	DB1031: 2N31_Hordedaten
   ↳ IDB naam: 2N32_schreiben	DB1032: 2N32_Hordedaten
   ↳ IDB naam: 2N33_schreiben	DB1033: 2N33_Hordedaten
   ↳ IDB naam: 2N34_schreiben	DB1034: 2N34_Hordedaten
 🗂️ Updated path level 0: "Salzbad 2.2: Horden 2N51/2N52/2N53" → [Salzbad 2.2: Horden 2N51/2N52/2N53]
 💾 Saving program: Hordedaten
 🔧 Starting normalization for source: word
 📝 Original text (first 300 chars): Käse in Horde:
FB701: Symbolik IDB: 2N11_Käse
FB702: Symbolik IDB: 2N12_Käse
FB703: Symbolik IDB: 2N13_Käse
FB704: Symbolik IDB: 2N14_Käse
FB711: Symbolik IDB: 2N31_Käse
FB712: Symbolik IDB: 2N32_Käse
FB713: Symbolik IDB: 2N33_Käse
FB714: Symbolik IDB: 2N34_Käse
Daten schreiben in Horde	Hordedaten i
 ✅ Normalized text (first 300 chars): Käse in Horde: FB701: Symbolik IDB: 2N11_Käse
FB702: Symbolik IDB: 2N12_Käse
FB703: Symbolik IDB: 2N13_Käse
FB704: Symbolik IDB: 2N14_Käse
FB711: Symbolik IDB: 2N31_Käse
FB712: Symbolik IDB: 2N32_Käse
FB713: Symbolik IDB: 2N33_Käse
FB714: Symbolik IDB: 2N34_Käse
Daten schreiben in Horde Hordedaten i
 📊 Parse result for Hordedaten: Object
 🔧 Starting normalization for source: word
 📝 Original text (first 300 chars): Käse in Horde:
FB701: Symbolik IDB: 2N11_Käse
FB702: Symbolik IDB: 2N12_Käse
FB703: Symbolik IDB: 2N13_Käse
FB704: Symbolik IDB: 2N14_Käse
FB711: Symbolik IDB: 2N31_Käse
FB712: Symbolik IDB: 2N32_Käse
FB713: Symbolik IDB: 2N33_Käse
FB714: Symbolik IDB: 2N34_Käse
Daten schreiben in Horde	Hordedaten i
 ✅ Normalized text (first 300 chars): Käse in Horde: FB701: Symbolik IDB: 2N11_Käse
FB702: Symbolik IDB: 2N12_Käse
FB703: Symbolik IDB: 2N13_Käse
FB704: Symbolik IDB: 2N14_Käse
FB711: Symbolik IDB: 2N31_Käse
FB712: Symbolik IDB: 2N32_Käse
FB713: Symbolik IDB: 2N33_Käse
FB714: Symbolik IDB: 2N34_Käse
Daten schreiben in Horde Hordedaten i
 ⚠️ Geen stappen gevonden voor Hordedaten
overrideMethod @ installHook.js:1
 📌 Found program: Handbedienung Horde 2N51 FB2100
 📁 Created program with path: [Salzbad 2.2: Horden 2N51/2N52/2N53] for "Handbedienung Horde 2N51"
 🗂️ Updated path level 1: "Handbedienung Horde 2N51" → [Salzbad 2.2: Horden 2N51/2N52/2N53 → Handbedienung Horde 2N51]
   ↳ IDB naam: Handbedienung Horde 2N51
 💾 Saving program: Handbedienung Horde 2N51
 🔧 Starting normalization for source: word
 📝 Original text (first 300 chars): Symbolik IDB: Handbedienung Horde 2N51
Freigabe Horde 2N51 nach oben =
[ 2LCP30-002-HS: Drucktaste Hebevorrichtung Horde 2N51 auf
+ 2LCP31-002-HS: Drucktaste Hebevorrichtung Horde 2N51 auf
Zeit (Einschaltverzögerung) ]
Zeit (Ausschaltverzögerung)
NICHT Störung: Hebevorrichtung Horde 2N51 zu hoch (2N
 ✅ Normalized text (first 300 chars): Symbolik IDB: Handbedienung Horde 2N51
Freigabe Horde 2N51 nach oben = [ 2LCP30-002-HS: Drucktaste Hebevorrichtung Horde 2N51 auf
+ 2LCP31-002-HS: Drucktaste Hebevorrichtung Horde 2N51 auf
Zeit (Einschaltverzögerung) ]
Zeit (Ausschaltverzögerung)
NICHT Störung: Hebevorrichtung Horde 2N51 zu hoch (2N
 📊 Parse result for Handbedienung Horde 2N51: Object
 🔧 Starting normalization for source: word
 📝 Original text (first 300 chars): Symbolik IDB: Handbedienung Horde 2N51
Freigabe Horde 2N51 nach oben =
[ 2LCP30-002-HS: Drucktaste Hebevorrichtung Horde 2N51 auf
+ 2LCP31-002-HS: Drucktaste Hebevorrichtung Horde 2N51 auf
Zeit (Einschaltverzögerung) ]
Zeit (Ausschaltverzögerung)
NICHT Störung: Hebevorrichtung Horde 2N51 zu hoch (2N
 ✅ Normalized text (first 300 chars): Symbolik IDB: Handbedienung Horde 2N51
Freigabe Horde 2N51 nach oben = [ 2LCP30-002-HS: Drucktaste Hebevorrichtung Horde 2N51 auf
+ 2LCP31-002-HS: Drucktaste Hebevorrichtung Horde 2N51 auf
Zeit (Einschaltverzögerung) ]
Zeit (Ausschaltverzögerung)
NICHT Störung: Hebevorrichtung Horde 2N51 zu hoch (2N
hook.js:608 ⚠️ Geen stappen gevonden voor Handbedienung Horde 2N51
overrideMethod @ hook.js:608
enhancedWordParser.js:343 🏗️ Building hierarchy with programs: 73
enhancedWordParser.js:345   📁 Program: Hauptprogramm Einfuhr, Path: [Einfuhr → Hauptprogramme]
enhancedWordParser.js:345   📁 Program: Selektionsprogramm Horde für Einfuhr, Path: [Einfuhr → Hauptprogramme → Hauptprogramm Einfuhr]
enhancedWordParser.js:345   📁 Program: Einfuhrwagen T10 nach Reinigungsposition, Path: [Einfuhr → Hauptprogramme → Selektionsprogramm Horde für Einfuhr]
enhancedWordParser.js:345   📁 Program: Reinigung Einfuhrwagen T10, Path: [Einfuhr → Hauptprogramme → Einfuhrwagen T10 nach Reinigungsposition]
enhancedWordParser.js:345   📁 Program: Kommunikation nach K5, Path: [Einfuhr → Hauptprogramme → Reinigung Einfuhrwagen T10]
enhancedWordParser.js:345   📁 Program: Käsezähler Anfang T10B, Path: [Einfuhr → Hauptprogramme → Kommunikation nach K5]
enhancedWordParser.js:345   📁 Program: Käsezähler Anfang T11B, Path: [Einfuhr → Hauptprogramme → Käsezähler Anfang T10B]
enhancedWordParser.js:345   📁 Program: Käsezähler Ende T10B, Path: [Einfuhr → Hauptprogramme → Käsezähler Anfang T11B]
enhancedWordParser.js:345   📁 Program: Käsezähler Ende T11B, Path: [Einfuhr → Hauptprogramme → Käsezähler Ende T10B]
enhancedWordParser.js:345   📁 Program: Sortentrennung N10, Path: [Einfuhr → Hauptprogramme → Käsezähler Ende T11B]
enhancedWordParser.js:345   📁 Program: Sortentrennung N11, Path: [Einfuhr → Hauptprogramme → Sortentrennung N10]
enhancedWordParser.js:345   📁 Program: Füllen Horde Reihe für Reihe, Path: [Einfuhr → Hauptprogramme → Sortentrennung N11]
enhancedWordParser.js:345   📁 Program: N10: Blockierung Einfuhrrinne, Path: [Einfuhr → Maschineteile Einfuhr]
enhancedWordParser.js:345   📁 Program: N11: Blockierung Einfuhrrinne, Path: [Einfuhr → Maschineteile Einfuhr → N10: Blockierung Einfuhrrinne]
enhancedWordParser.js:345   📁 Program: T10: Füllen Horde, Path: [Einfuhr → Maschineteile Einfuhr → N11: Blockierung Einfuhrrinne]
enhancedWordParser.js:345   📁 Program: T11: Füllen Horde, Path: [Einfuhr → Maschineteile Einfuhr → T10: Füllen Horde ]
enhancedWordParser.js:345   📁 Program: T10: Positionieren Einfuhrwagen, Path: [Einfuhr → Maschineteile Einfuhr → T11: Füllen Horde ]
enhancedWordParser.js:345   📁 Program: T10: Transport MT10D Einfuhrwagen, Path: [Einfuhr → Maschineteile Einfuhr → T10: Positionieren Einfuhrwagen ]
enhancedWordParser.js:345   📁 Program: T10: Transportbahn T10A, Path: [Einfuhr → Maschineteile Einfuhr → T10: Transport MT10D Einfuhrwagen ]
enhancedWordParser.js:345   📁 Program: T10: Transportbahn T11A, Path: [Einfuhr → Maschineteile Einfuhr → T10: Transportbahn T10A]
enhancedWordParser.js:345   📁 Program: T10: Transportbahn Käse Anfuhr T10B, Path: [Einfuhr → Maschineteile Einfuhr → T10: Transportbahn T11A]
enhancedWordParser.js:345   📁 Program: T10: Transportbahn Käse Anfuhr T11B, Path: [Einfuhr → Maschineteile Einfuhr → T10: Transportbahn Käse Anfuhr T10B]
enhancedWordParser.js:345   📁 Program: T10: Transportbahn Käse Abfuhr T10B, Path: [Einfuhr → Maschineteile Einfuhr → T10: Transportbahn Käse Anfuhr T11B]
enhancedWordParser.js:345   📁 Program: T10: Transportbahn Käse Abfuhr T11B, Path: [Einfuhr → Maschineteile Einfuhr → T10: Transportbahn Käse Abfuhr T10B]
enhancedWordParser.js:345   📁 Program: T10: Transportbahn positionieren T10C, Path: [Einfuhr → Maschineteile Einfuhr → T10: Transportbahn Käse Abfuhr T11B]
enhancedWordParser.js:345   📁 Program: T10: Transportbahn positionieren T11C, Path: [Einfuhr → Maschineteile Einfuhr → T10: Transportbahn positionieren T10C]
enhancedWordParser.js:345   📁 Program: Strömung Einfuhrrinne N10/N11, Path: [Einfuhr → Niveauregelung und Strömung]
enhancedWordParser.js:345   📁 Program: Hauptprogramm Ausfuhr, Path: [Ausfuhr → Hauptprogramme]
enhancedWordParser.js:345   📁 Program: Selektionsprogramm Horden für Ausfuhr, Path: [Ausfuhr → Hauptprogramme → Hauptprogramm Ausfuhr]
enhancedWordParser.js:345   📁 Program: Horden Ausfuhrtabelle füllen/entleeren, Path: [Ausfuhr → Hauptprogramme → Selektionsprogramm Horden für Ausfuhr]
enhancedWordParser.js:345   📁 Program: Ausfuhrwagen T40 von Bad nach Reinigungsposition, Path: [Ausfuhr → Hauptprogramme → Horden Ausfuhrtabelle füllen/entleeren]
enhancedWordParser.js:345   📁 Program: Reinigung Ausfuhrwagen T40, Path: [Ausfuhr → Hauptprogramme → Reserviert]
enhancedWordParser.js:345   📁 Program: Käsezähler T40A, Path: [Ausfuhr → Hauptprogramme → Reinigung Ausfuhrwagen T40]
enhancedWordParser.js:345   📁 Program: T40: Entleeren Horde Reihe für Reihe, Path: [Ausfuhr → Maschineteile Ausfuhr]
enhancedWordParser.js:345   📁 Program: T40: Positionieren Haken T40, Path: [Ausfuhr → Maschineteile Ausfuhr → T40: Entleeren Horde Reihe für Reihe]
enhancedWordParser.js:345   📁 Program: T40: Positionieren Ausfuhrwagen, Path: [Ausfuhr → Maschineteile Ausfuhr → T40: Positionieren Haken T40]
enhancedWordParser.js:345   📁 Program: T40: Transport MT40D Ausfuhrwagen, Path: [Ausfuhr → Maschineteile Ausfuhr → T40: Positionieren Ausfuhrwagen]
enhancedWordParser.js:345   📁 Program: T40: Transportbahn T40A, Path: [Ausfuhr → Maschineteile Ausfuhr → T40: Transport MT40D Ausfuhrwagen]
enhancedWordParser.js:345   📁 Program: T40: Transportbahn T40B, Path: [Ausfuhr → Maschineteile Ausfuhr → T40: Transportbahn T40A]
enhancedWordParser.js:345   📁 Program: Strömung Ausfuhrrinne N40, Path: [Ausfuhr → Niveauregelung und Strömung]
enhancedWordParser.js:345   📁 Program: N21 Füllen Horde, Path: [Einfuhrhorden N21-N24 → Hauptprogramme]
enhancedWordParser.js:345   📁 Program: N22 Füllen Horde, Path: [Einfuhrhorden N21-N24 → Hauptprogramme → N21 Füllen Horde]
enhancedWordParser.js:345   📁 Program: N23 Füllen Horde, Path: [Einfuhrhorden N21-N24 → Hauptprogramme → N22 Füllen Horde]
enhancedWordParser.js:345   📁 Program: N24 Füllen Horde, Path: [Einfuhrhorden N21-N24 → Hauptprogramme → N23 Füllen Horde]
enhancedWordParser.js:345   📁 Program: N21: Umschwimmen Horde nach N31, Path: [Einfuhrhorden N21-N24 → Hauptprogramme → N24 Füllen Horde]
enhancedWordParser.js:345   📁 Program: N22: Umschwimmen Horde nach N32, Path: [Einfuhrhorden N21-N24 → Hauptprogramme → N21: Umschwimmen Horde nach N31]
enhancedWordParser.js:345   📁 Program: N23: Umschwimmen Horde nach N33, Path: [Einfuhrhorden N21-N24 → Hauptprogramme → N22: Umschwimmen Horde nach N32]
enhancedWordParser.js:345   📁 Program: N24: Umschwimmen Horde nach N34, Path: [Einfuhrhorden N21-N24 → Hauptprogramme → N23: Umschwimmen Horde nach N33]
enhancedWordParser.js:345   📁 Program: Ausschalten Horde, Path: [Einfuhrhorden N21-N24 → Hauptprogramme → N24: Umschwimmen Horde nach N34]
enhancedWordParser.js:345   📁 Program: Horde N21 Heben/Senken, Path: [Einfuhrhorden N21-N24 → Maschineteile]
enhancedWordParser.js:345   📁 Program: Horde N22 Heben/Senken, Path: [Einfuhrhorden N21-N24 → Maschineteile → Horde N21 Heben/Senken]
enhancedWordParser.js:345   📁 Program: Horde N23 Heben/Senken, Path: [Einfuhrhorden N21-N24 → Maschineteile → Horde N22 Heben/Senken]
enhancedWordParser.js:345   📁 Program: Horde N24 Heben/Senken, Path: [Einfuhrhorden N21-N24 → Maschineteile → Horde N23 Heben/Senken]
enhancedWordParser.js:345   📁 Program: Laserkontrolle Horde N21-N24, Path: [Einfuhrhorden N21-N24 → Maschineteile → Horde N24 Heben/Senken]
enhancedWordParser.js:345   📁 Program: Strömungsjets N21-N24-300, Path: [Einfuhrhorden N21-N24 → Strömung]
enhancedWordParser.js:345   📁 Program: Strömungspumpe P03, Path: [Einfuhrhorden N21-N24 → Strömung → Strömungsjets N21-N24-300]
enhancedWordParser.js:345   📁 Program: Entleeren Horde N31, Path: [AusfuhrHorden N31-N34 → Hauptprogramme]
enhancedWordParser.js:345   📁 Program: Entleeren Horde N32, Path: [AusfuhrHorden N31-N34 → Hauptprogramme → Entleeren Horde N31]
enhancedWordParser.js:345   📁 Program: Entleeren Horde N33, Path: [AusfuhrHorden N31-N34 → Hauptprogramme → Entleeren Horde N32]
enhancedWordParser.js:345   📁 Program: Entleeren Horde N34, Path: [AusfuhrHorden N31-N34 → Hauptprogramme → Entleeren Horde N33]
enhancedWordParser.js:345   📁 Program: Horde N31 Heben/Senken, Path: [AusfuhrHorden N31-N34 → Maschineteile]
enhancedWordParser.js:345   📁 Program: Horde N32 Heben/Senken, Path: [AusfuhrHorden N31-N34 → Maschineteile → Horde N31 Heben/Senken]
enhancedWordParser.js:345   📁 Program: Horde N33 Heben/Senken, Path: [AusfuhrHorden N31-N34 → Maschineteile → Horde N32 Heben/Senken]
enhancedWordParser.js:345   📁 Program: Horde N34 Heben/Senken, Path: [AusfuhrHorden N31-N34 → Maschineteile → Horde N33 Heben/Senken]
enhancedWordParser.js:345   📁 Program: Strömungsjets 2N11-2N14-101, Path: [AusfuhrHorden N31-N34 → Strömung]
enhancedWordParser.js:345   📁 Program: Strömungspumpe P04, Path: [AusfuhrHorden N31-N34 → Strömung → Strömungsjets 2N11-2N14-101]
enhancedWordParser.js:345   📁 Program: Strömung Salzbad N20, Path: [Salzbad N20]
enhancedWordParser.js:345   📁 Program: Entleeren Salzbad/Füllen Puffertank, Path: [Salzbad N20 → Strömung Salzbad N20]
enhancedWordParser.js:345   📁 Program: Datenübertragung mit K5, Path: [Chargedaten]
enhancedWordParser.js:345   📁 Program: Chargedaten N10, Path: [Chargedaten → Datenübertragung mit K5]
enhancedWordParser.js:345   📁 Program: Käserezept, Path: [Chargedaten]
enhancedWordParser.js:345   📁 Program: Hordedaten, Path: [Käserezept]
enhancedWordParser.js:345   📁 Program: Handbedienung Horde 2N51, Path: [Salzbad 2.2: Horden 2N51/2N52/2N53]
enhancedWordParser.js:350 🏗️ Built hierarchy: Object
enhancedWordParser.js:362 ✅ Word parsing complete: Object
